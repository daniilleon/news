<?php

namespace ContainerKWUSDw5;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getRoleStatusControllerService extends Module_KernelDevDebugContainer
{
    /**
     * Gets the public 'Module\Shared\RoleStatus\Controller\Api\RoleStatusController' shared autowired service.
     *
     * @return \Module\Shared\RoleStatus\Controller\Api\RoleStatusController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'module'.\DIRECTORY_SEPARATOR.'Shared'.\DIRECTORY_SEPARATOR.'RoleStatus'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'Api'.\DIRECTORY_SEPARATOR.'RoleStatusController.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'module'.\DIRECTORY_SEPARATOR.'Shared'.\DIRECTORY_SEPARATOR.'RoleStatus'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'RoleStatusService.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'module'.\DIRECTORY_SEPARATOR.'Shared'.\DIRECTORY_SEPARATOR.'RoleStatus'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'RoleStatusValidationService.php';

        $a = ($container->privates['Module\\Shared\\RoleStatus\\Repository\\RoleStatusRepository'] ?? $container->load('getRoleStatusRepositoryService'));
        $b = ($container->privates['Module\\Shared\\RoleStatus\\Repository\\RoleStatusTranslationsRepository'] ?? $container->load('getRoleStatusTranslationsRepositoryService'));
        $c = ($container->privates['Module\\Common\\Proxy\\Core\\LanguagesProxyService'] ?? $container->load('getLanguagesProxyServiceService'));
        $d = ($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService'));

        return $container->services['Module\\Shared\\RoleStatus\\Controller\\Api\\RoleStatusController'] = new \Module\Shared\RoleStatus\Controller\Api\RoleStatusController(new \Module\Shared\RoleStatus\Service\RoleStatusService($a, $b, $c, new \Module\Shared\RoleStatus\Service\RoleStatusValidationService($a, $b, $c, $d), ($container->privates['Module\\Common\\Service\\ImageService'] ?? $container->load('getImageServiceService')), ($container->privates['Module\\Common\\Helpers\\FieldUpdateHelper'] ?? $container->load('getFieldUpdateHelperService')), $d), $d, ($container->privates['Module\\Common\\Factory\\ResponseFactory'] ?? $container->load('getResponseFactoryService')));
    }
}
