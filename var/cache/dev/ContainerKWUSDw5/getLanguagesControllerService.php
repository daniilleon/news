<?php

namespace ContainerKWUSDw5;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLanguagesControllerService extends Module_KernelDevDebugContainer
{
    /**
     * Gets the public 'Module\Core\Languages\Controller\Api\LanguagesController' shared autowired service.
     *
     * @return \Module\Core\Languages\Controller\Api\LanguagesController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'module'.\DIRECTORY_SEPARATOR.'Core'.\DIRECTORY_SEPARATOR.'Languages'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'Api'.\DIRECTORY_SEPARATOR.'LanguagesController.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'module'.\DIRECTORY_SEPARATOR.'Core'.\DIRECTORY_SEPARATOR.'Languages'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'LanguagesService.php';

        $a = ($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService'));

        return $container->services['Module\\Core\\Languages\\Controller\\Api\\LanguagesController'] = new \Module\Core\Languages\Controller\Api\LanguagesController(new \Module\Core\Languages\Service\LanguagesService(($container->privates['Module\\Core\\Languages\\Repository\\LanguagesRepository'] ?? $container->load('getLanguagesRepositoryService')), ($container->privates['Module\\Core\\Languages\\Service\\LanguagesValidationService'] ?? $container->load('getLanguagesValidationServiceService')), ($container->privates['Module\\Common\\Helpers\\FieldUpdateHelper'] ?? $container->load('getFieldUpdateHelperService')), $a), $a, ($container->privates['Module\\Common\\Factory\\ResponseFactory'] ?? $container->load('getResponseFactoryService')));
    }
}
